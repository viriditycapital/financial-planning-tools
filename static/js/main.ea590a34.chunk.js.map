{"version":3,"sources":["Nav.js","Home.js","compound-interest/calc.js","compound-interest/CompoundInterestGraph.js","compound-interest/CompoundInterestTable.js","compound-interest/CompoundInterest.js","buy-vs-rent/BuyVsRent.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","this","global","nav","onClick","setGlobal","Component","Home","periods_per_year","daily","weekly","biweekly","monthly","annually","month_name","calc_compound_interest_table","initial_amount","interest_rate","inflation_rate","num_years","recurring_investment","recurring_investment_period","compound_interest_data","push","year","period","amount_invested","value","returns","amount_invested_in_todays_dollars","value_in_todays_dollars","returns_in_todays_dollars","end_of_year","current_amount_invested","current_value","current_amount_invested_in_todays_dollars","inflation_multiplier","ppy","deflated_current_value","current_value_in_todays_dollars","options","title","display","text","fontSize","fontFamily","scales","xAxes","scaleLabel","labelString","ticks","yAxes","beginAtZero","callback","index","values","CompoundInterestTable","props","datasets","label","data","map","d","Math","round","fill","backgroundColor","borderColor","display_detail_inflation","borderWidth","pointRadius","pointStyle","labels","usd_formatter","Intl","NumberFormat","style","currency","maximumFractionDigits","pct_formatter","minimumFractionDigits","format","length","display_detail_period","i","CompoundInterest","calc","bind","update_value","toggle_value","state","recurring_investment_period_used_for_calc","undefined","setState","key","type","defaultValue","onChange","e","Number","target","CompoundInterestGraph","BuyVsRent","useState","equity","setEquity","riskFree","setRiskFree","numYears","setNumYears","rent","setRent","rentersInsurance","setRentersInsurance","price","setPrice","down","setDown","tax","setTax","cc","setCC","mortgageRate","setMortgageRate","isCondo","setIsCondo","getClosingCosts","useCallback","total","mortgageAmount","judgmentLienSearch","closing","setClosing","getEquityReturn","isRent","getRentCost","getBuyCost","rentCost","setRentCost","buyCost","setBuyCost","useEffect","id","disabled","toFixed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea590a34.chunk.js","sourcesContent":["import { React, Component } from 'reactn';\r\nimport \"./Nav.css\"\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <nav className=\"side-nav\">\r\n          <ul className=\"nav-list\">\r\n            <li className={this.global.nav === \"Home\" ? \"selected-nav\" : \"\"}\r\n              onClick={() => this.setGlobal({ nav: \"Home\" })}>\r\n              <a>Home</a></li>\r\n            <li className={this.global.nav === \"CompoundInterest\" ? \"selected-nav\" : \"\"}\r\n              onClick={() => this.setGlobal({ nav: \"CompoundInterest\" })}>\r\n              <a>Compound Interest</a></li>\r\n            <li className={this.global.nav === \"Buy vs. Rent\" ? \"selected-nav\" : \"\"}\r\n              onClick={() => this.setGlobal({ nav: \"BuyVsRent\" })}>\r\n              <a>Buy vs. Rent</a></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav","import { React, Component } from 'reactn';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <h1>Viridity Financial Planning Tools</h1>\r\n\r\n        <p>Welcome to Viridity's very aesthetic financial planning tools. Use these to get rich. This is not intended to be investment advice.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","var periods_per_year = {\r\n  daily: 365,\r\n  weekly: 52,\r\n  biweekly: 26,\r\n  monthly: 12,\r\n  annually: 1\r\n}\r\n\r\nvar month_name = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\nexport default function calc_compound_interest_table(\r\n  initial_amount = 0,\r\n  interest_rate = 0.10,\r\n  inflation_rate = 0.03,\r\n  num_years = 50,\r\n  recurring_investment = 0,\r\n  recurring_investment_period = 'annually'\r\n) {\r\n  let compound_interest_data = []\r\n  compound_interest_data.push({\r\n    year: \"-\",\r\n    period: \"-\",\r\n    amount_invested: initial_amount,\r\n    value: initial_amount,\r\n    returns: 0,\r\n    amount_invested_in_todays_dollars: initial_amount,\r\n    value_in_todays_dollars: initial_amount,\r\n    returns_in_todays_dollars: 0,\r\n    end_of_year: true\r\n  })\r\n\r\n  let current_amount_invested = initial_amount\r\n  let current_value = initial_amount\r\n  let current_amount_invested_in_todays_dollars = initial_amount\r\n\r\n  let inflation_multiplier = 1\r\n  let ppy = periods_per_year[recurring_investment_period]\r\n\r\n  for (let year = 1; year <= num_years; year++) {\r\n    for (let period = 1; period <= ppy; period++) {\r\n      // Apply interest rates/inflation before adding recurring investments\r\n      current_value *= (1 + (interest_rate / ppy))\r\n      inflation_multiplier *= (1 + (inflation_rate / ppy))\r\n\r\n      // Deflate the money before adding recurring investment\r\n      let deflated_current_value = current_value / inflation_multiplier\r\n\r\n      current_amount_invested += recurring_investment\r\n      current_value += recurring_investment\r\n\r\n      let current_value_in_todays_dollars = deflated_current_value + recurring_investment\r\n      current_amount_invested_in_todays_dollars += recurring_investment / inflation_multiplier\r\n\r\n      compound_interest_data.push({\r\n        year: year,\r\n        period: recurring_investment_period === \"monthly\" ? month_name[period - 1] : period,\r\n        amount_invested: current_amount_invested,\r\n        value: current_value,\r\n        returns: (current_value / current_amount_invested) - 1,\r\n        amount_invested_in_todays_dollars: current_amount_invested_in_todays_dollars,\r\n        value_in_todays_dollars: current_value_in_todays_dollars,\r\n        returns_in_todays_dollars: (current_value_in_todays_dollars / current_amount_invested_in_todays_dollars) - 1,\r\n        end_of_year: period === ppy\r\n      })\r\n    }\r\n  }\r\n\r\n  return compound_interest_data\r\n}","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst options = {\r\n  title: {\r\n    display: true,\r\n    text: 'VALUE OVER TIME',\r\n    fontSize: 18,\r\n    fontFamily: 'Source Sans Pro'\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Year',\r\n          fontSize: 16,\r\n          fontFamily: 'Anonymous Pro',\r\n        },\r\n        ticks: {\r\n          fontFamily: 'Anonymous Pro',\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          fontFamily: 'Anonymous Pro',\r\n          beginAtZero: true,\r\n          callback: (value, index, values) => '$' + value,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n}\r\n\r\nfunction CompoundInterestTable(props) {\r\n  var datasets = [\r\n    {\r\n      label: 'Value',\r\n      data: props.data.map(d => Math.round(d.value * 100) / 100),\r\n      fill: false,\r\n      backgroundColor: 'rgb(85, 107, 47)',\r\n      borderColor: 'rgb(85, 107, 47, 0.69)',\r\n    },\r\n    {\r\n      label: 'Amount Invested',\r\n      data: props.data.map(d => Math.round(d.amount_invested * 100) / 100),\r\n      fill: false,\r\n      backgroundColor: 'rgb(127, 127, 127)',\r\n      borderColor: 'rgba(127, 127, 127, 0.69)',\r\n    }\r\n  ]\r\n\r\n  if (props.display_detail_inflation) {\r\n    datasets.push(\r\n      {\r\n        label: 'Value (adj.)',\r\n        data: props.data.map(d => Math.round(d.value_in_todays_dollars * 100) / 100),\r\n        fill: false,\r\n        backgroundColor: 'rgb(60, 179, 113)',\r\n        borderColor: 'rgb(60, 179, 113, 0.69)',\r\n        borderWidth: 2,\r\n        pointRadius: 2,\r\n        pointStyle: 'rectRot'\r\n      },\r\n      {\r\n        label: 'Amount Invested (adj.)',\r\n        data: props.data.map(d => Math.round(d.amount_invested_in_todays_dollars * 100) / 100),\r\n        fill: false,\r\n        backgroundColor: 'rgb(200, 200, 200)',\r\n        borderColor: 'rgba(200, 200, 200, 0.69)',\r\n        borderWidth: 2,\r\n        pointRadius: 2,\r\n        pointStyle: 'rectRot'\r\n      }\r\n    )\r\n  }\r\n\r\n  const data = {\r\n    labels: props.data.map(d => d.year),\r\n    datasets: datasets\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompoundInterestTable","import React from 'react';\r\n\r\nvar usd_formatter = new Intl.NumberFormat('en-US', {\r\n  style: 'currency',\r\n  currency: 'USD',\r\n  maximumFractionDigits: 2\r\n});\r\n\r\nvar pct_formatter = new Intl.NumberFormat('en-US', {\r\n  style: 'percent',\r\n  minimumFractionDigits: 1,\r\n  maximumFractionDigits: 1\r\n});\r\n\r\nfunction CompoundInterestTable(props) {\r\n  return (\r\n    <div>\r\n      <table className=\"key-stats\">\r\n        <tr>\r\n          <td>Final Value</td>\r\n          <td>{usd_formatter.format(props.data[props.data.length - 1].value)}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Returns</td>\r\n          <td>{pct_formatter.format(props.data[props.data.length - 1].returns)}</td>\r\n        </tr>\r\n      </table>\r\n\r\n      <br />\r\n\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            <td>Year</td>\r\n            {props.display_detail_period &&\r\n              {\r\n                'daily': <td>Day</td>,\r\n                'weekly': <td>Week</td>,\r\n                'biweekly': <td>Period</td>,\r\n                'monthly': <td>Month</td>,\r\n                'annually': <></>,\r\n              }[props.recurring_investment_period]\r\n            }\r\n            <td>Amount Invested</td>\r\n            <td>Value</td>\r\n            <td>Returns</td>\r\n            {props.display_detail_inflation &&\r\n              <>\r\n                <td>Amount Invested (in today's $)</td>\r\n                <td>Value (in today's $)</td>\r\n                <td>Returns (in today's $)</td>\r\n              </>\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((d, i) =>\r\n            ((!props.display_detail_period && d.end_of_year) || props.display_detail_period) &&\r\n            <tr key={i}>\r\n              <td>{d.year}</td>\r\n              {(props.recurring_investment_period !== 'annually' && props.display_detail_period) &&\r\n                <td>{d.period}</td>\r\n              }\r\n              <td>{usd_formatter.format(d.amount_invested)}</td>\r\n              <td>{usd_formatter.format(d.value)}</td>\r\n              <td>{pct_formatter.format(d.returns)}</td>\r\n              {props.display_detail_inflation &&\r\n                <>\r\n                  <td>{usd_formatter.format(d.amount_invested_in_todays_dollars)}</td>\r\n                  <td>{usd_formatter.format(d.value_in_todays_dollars)}</td>\r\n                  <td>{pct_formatter.format(d.returns_in_todays_dollars)}</td>\r\n                </>\r\n              }\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompoundInterestTable","import React, { Component } from 'react';\r\nimport calc_compound_interest_table from './calc.js'\r\nimport CompoundInterestGraph from './CompoundInterestGraph'\r\nimport CompoundInterestTable from './CompoundInterestTable'\r\n\r\nclass CompoundInterest extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.calc = this.calc.bind(this);\r\n    this.update_value = this.update_value.bind(this);\r\n    this.toggle_value = this.toggle_value.bind(this);\r\n\r\n    this.state = {\r\n      initial_amount: 5000,\r\n      interest_rate: 0.10,\r\n      inflation_rate: 0.03,\r\n      num_years: 10,\r\n      recurring_investment: 1000,\r\n      recurring_investment_period: 'annually',\r\n      recurring_investment_period_used_for_calc: 'annually',\r\n      display_detail_period: false,\r\n      display_detail_inflation: false,\r\n      data: undefined\r\n    }\r\n  }\r\n\r\n  calc() {\r\n    this.setState({\r\n      data: calc_compound_interest_table(\r\n        this.state.initial_amount,\r\n        this.state.interest_rate,\r\n        this.state.inflation_rate,\r\n        this.state.num_years,\r\n        this.state.recurring_investment,\r\n        this.state.recurring_investment_period\r\n      ),\r\n      recurring_investment_period_used_for_calc: this.state.recurring_investment_period\r\n    })\r\n  }\r\n\r\n  update_value(key, value) {\r\n    this.setState({\r\n      [key]: value\r\n    })\r\n  }\r\n\r\n  toggle_value(key) {\r\n    this.setState({\r\n      [key]: !this.state[key]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <h1>Compound Interest</h1>\r\n\r\n        <table className=\"input-table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <label className=\"input-label\">Initial Investment ($)</label> </td><td>\r\n                <input type=\"number\" defaultValue={this.state.initial_amount} className=\"number-input\"\r\n                  onChange={e => this.update_value(\"initial_amount\", Number(e.target.value))} />\r\n              </td>\r\n              <td>\r\n                <label className=\"input-label\">Number of Years</label> </td><td>\r\n                <input type=\"number\" defaultValue={this.state.num_years} className=\"number-input\"\r\n                  onChange={e => this.update_value(\"num_years\", Number(e.target.value))} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label className=\"input-label\">Recurring Investment ($)</label> </td><td>\r\n                <input type=\"number\" defaultValue={this.state.recurring_investment} className=\"number-input\"\r\n                  onChange={e => this.update_value(\"recurring_investment\", Number(e.target.value))} />\r\n              </td>\r\n              <td>\r\n                <label className=\"input-label\">Every</label> </td><td>\r\n                <select defaultValue={this.state.recurring_investment_period} className=\"select-input\"\r\n                  onChange={e => this.update_value('recurring_investment_period', e.target.value)}>\r\n                  <option value=\"daily\">Day</option>\r\n                  <option value=\"weekly\">Week</option>\r\n                  <option value=\"biweekly\">Two Weeks</option>\r\n                  <option value=\"monthly\">Month</option>\r\n                  <option value=\"annually\">Year</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label className=\"input-label\">Interest Rate (%)</label> </td><td>\r\n                <input type=\"number\" defaultValue={this.state.interest_rate * 100} className=\"number-input percentage\"\r\n                  onChange={e => this.update_value(\"interest_rate\", Number(e.target.value) / 100)} />\r\n              </td>\r\n              <td>\r\n                <label className=\"input-label\">Inflation Rate (%)</label> </td><td>\r\n                <input type=\"number\" defaultValue={this.state.inflation_rate * 100} className=\"number-input percentage\"\r\n                  onChange={e => this.update_value(\"inflation_rate\", Number(e.target.value) / 100)} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <br />\r\n        <span className=\"button action-button\" onClick={this.calc}>Calculate</span>\r\n\r\n        <span className={\"button toggle-button\" + (this.state.display_detail_period ? \" selected\" : \"\")}\r\n          onClick={() => this.toggle_value(\"display_detail_period\")}>\r\n          {this.state.display_detail_period ? <>&#9724;</> : <>&#9723;</>} Break Down by Time</span>\r\n\r\n        <span className={\"button toggle-button\" + (this.state.display_detail_inflation ? \" selected\" : \"\")}\r\n          onClick={() => this.toggle_value(\"display_detail_inflation\")}>\r\n          {this.state.display_detail_inflation ? <>&#9724;</> : <>&#9723;</>} Compare Against Today's Dollars</span>\r\n\r\n\r\n        {this.state.data &&\r\n          <CompoundInterestGraph\r\n            data={this.state.data}\r\n            display_detail_inflation={this.state.display_detail_inflation} />\r\n        }\r\n\r\n        <br />\r\n        {this.state.data &&\r\n          <CompoundInterestTable\r\n            data={this.state.data}\r\n            recurring_investment_period={this.state.recurring_investment_period_used_for_calc}\r\n            display_detail_period={this.state.display_detail_period}\r\n            display_detail_inflation={this.state.display_detail_inflation} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompoundInterest","import React, { useCallback, useEffect, useState } from 'react';\r\nimport './buyrent.css';\r\n\r\nexport default function BuyVsRent() {\r\n  // Your own parameters\r\n  const [equity, setEquity] = useState(500000);\r\n  const [riskFree, setRiskFree] = useState(5);\r\n  const [numYears, setNumYears] = useState(3);\r\n\r\n  // Rent\r\n  const [rent, setRent] = useState(3500);\r\n  const [rentersInsurance, setRentersInsurance] = useState(5);\r\n\r\n  // Buy\r\n  const [price, setPrice] = useState(1000000);\r\n  const [down, setDown] = useState(200000);\r\n  const [tax, setTax] = useState(1000);\r\n  const [cc, setCC] = useState(1000);\r\n  const [mortgageRate, setMortgageRate] = useState(6);\r\n  const [isCondo, setIsCondo] = useState(true);\r\n\r\n  const getClosingCosts = useCallback((isCondo) => {\r\n    const bankFees = 800;\r\n    const flipTax = price * 0.01;\r\n    const attorney = 2500;\r\n\r\n    let total = bankFees + flipTax + attorney;\r\n\r\n    if (isCondo) {\r\n      const mortgageAmount = price - down;\r\n      const titleInsurance = 0.004 * price;\r\n      const mortgageTitleInsurance = 0.001 * price;\r\n      const mortgageTax = (mortgageAmount > 500000) ? 0.01925 * mortgageAmount : 0.018 * mortgageAmount;\r\n      const titleSearchFee = 895;\r\n      const deedRecordingFee = 285;\r\n      const mortgageRecordingFee = 250;\r\n      const ownerPOARecording = 100;\r\n      const titleCloser = 300;\r\n\r\n      total += titleInsurance + mortgageTitleInsurance + mortgageTax + titleSearchFee + deedRecordingFee + mortgageRecordingFee + ownerPOARecording + titleCloser;\r\n    } else {\r\n      const judgmentLienSearch = 450;\r\n      const financingFee = 500;\r\n      total += judgmentLienSearch + financingFee;\r\n    }\r\n\r\n    return total;\r\n  }, [price, down]);\r\n\r\n  const [closing, setClosing] = useState(getClosingCosts(isCondo));\r\n\r\n  const getEquityReturn = useCallback((isRent = true) => {\r\n    if (isRent) {\r\n      return (equity * riskFree / 100) / 12;\r\n    } else {\r\n      return ((equity - down) * riskFree / 100) / 12;\r\n    }\r\n  }, [equity, riskFree, down]);\r\n\r\n  const getRentCost = useCallback(() => {\r\n    return rent + rentersInsurance - getEquityReturn(true);\r\n  }, [rent, rentersInsurance, getEquityReturn]);\r\n\r\n  const getBuyCost = useCallback(() => {\r\n    return tax + cc + (closing/12) - getEquityReturn(false);\r\n  }, [tax, cc, closing, getEquityReturn]);\r\n\r\n  const [rentCost, setRentCost] = useState(getRentCost())\r\n  const [buyCost, setBuyCost] = useState(getBuyCost())\r\n\r\n  useEffect(() => {\r\n    setClosing(getClosingCosts(isCondo));\r\n  }, [price, down, isCondo, getClosingCosts]);\r\n\r\n  useEffect(() => {\r\n    setRentCost(getRentCost());\r\n  }, [rent, rentersInsurance, equity, riskFree, getRentCost]);\r\n\r\n  useEffect(() => {\r\n    setBuyCost(getBuyCost());\r\n  }, [price, down, tax, cc, closing, numYears, equity, riskFree, isCondo, getBuyCost]);\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <h1>Buy vs. Rent</h1>\r\n      <div className=\"situation\">\r\n        <h2>Your Situation</h2>\r\n        <div className=\"row\">\r\n          <label className=\"input-label\">Equity</label>\r\n          <input type=\"number\" className=\"number-input\" value={equity}\r\n            onChange={e => setEquity(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"input-label\">Risk-Free Rate (%)</label>\r\n          <input type=\"number\" className=\"number-input\" value={riskFree}\r\n            onChange={e => setRiskFree(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"input-label\">Mortgage Rate (%)</label>\r\n          <input type=\"number\" className=\"number-input\" value={mortgageRate}\r\n            onChange={e => setMortgageRate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"input-label\">Number of Years to Live</label>\r\n          <input type=\"number\" className=\"number-input\" value={numYears}\r\n            onChange={e => setNumYears(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"comparison\">\r\n        <h2>Comparison</h2>\r\n        <div className=\"row\">\r\n          <div id=\"rent\" className=\"col halfwidth\">\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Rent</label>\r\n              <input type=\"number\" className=\"number-input\" value={rent}\r\n                onChange={e => setRent(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Renter's Insurance</label>\r\n              <input type=\"number\" className=\"number-input\" value={rentersInsurance}\r\n                onChange={e => setRentersInsurance(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Equity Return</label>\r\n              <input type=\"number\" className='number-input' disabled value={(equity * riskFree / (100 * 12)).toFixed(2)} />\r\n            </div>\r\n          </div>\r\n          <div id=\"buy\" className=\"col halfwidth\">\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Condo or Co-op?</label>\r\n              <select value={isCondo ? \"Condo\" : \"Co-op\"} className='number-input'\r\n                onChange={e => setIsCondo(e.target.value === \"Condo\")}\r\n              >\r\n                <option value=\"Condo\">Condo</option>\r\n                <option value=\"Co-op\">Co-op</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Purchase Price</label>\r\n              <input type=\"number\" className=\"number-input\" value={price}\r\n                onChange={e => setPrice(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Down Payment</label>\r\n              <input type=\"number\" className=\"number-input\" value={down}\r\n                onChange={e => setDown(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Tax</label>\r\n              <input type=\"number\" className=\"number-input\" value={tax}\r\n                onChange={e => setTax(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">CC/Maintenance</label>\r\n              <input type=\"number\" className=\"number-input\" value={cc}\r\n                onChange={e => setCC(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Closing</label>\r\n              <input type=\"number\" className=\"number-input\" value={(closing / (12 * numYears)).toFixed(2)} disabled />\r\n            </div>\r\n            <div className=\"row\">\r\n              <label className=\"input-label\">Equity Return</label>\r\n              <input type=\"number\" className=\"number-input\" disabled value={((equity - down) * riskFree / (100 * 12)).toFixed(2)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col halfwidth'>\r\n            <div className='row'>\r\n              <label className=\"input-label\">Total Cost</label>\r\n              <input type=\"number\" className=\"number-input\" disabled value={(rentCost).toFixed(2)} />\r\n            </div>\r\n          </div>\r\n          <div className='col halfwidth'>\r\n            <div className='row'>\r\n              <label className=\"input-label\">Total Cost</label>\r\n              <input type=\"number\" className=\"number-input\" disabled value={(buyCost).toFixed(2)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2>Equity Built</h2>\r\n        Graph here of equity built over time, and table\r\n      </div>\r\n    </div >\r\n  )\r\n};","import { React, Component } from 'reactn';\r\nimport Nav from \"./Nav.js\"\r\nimport Home from \"./Home.js\"\r\nimport CompoundInterest from \"./compound-interest/CompoundInterest.js\"\r\nimport BuyVsRent from \"./buy-vs-rent/BuyVsRent.js\"\r\nimport \"./App.css\"\r\nimport './data.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setGlobal({\r\n      nav: \"Home\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Nav />\r\n\r\n        <div className=\"main\">\r\n          {\r\n            {\r\n              \"Home\": <Home />,\r\n              \"CompoundInterest\": <CompoundInterest />,\r\n              \"BuyVsRent\": <BuyVsRent />\r\n            }[this.global.nav]\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}